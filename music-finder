#!/bin/bash


######################################################
#                   Music_Finder V1.1                #
#  https://gitlab.com/Music_Finder/music-finder.git  #
######################################################


normal="$(printf '\033[0m')"          # Text mode
# Colors
red="$(printf '\033[0;31m')"  		  # red
green="$(printf '\033[0;32m')"        # green
orange="$(printf '\033[0;33m')"       # orange
blue="$(printf '\033[0;34m')"         # blue
white="$(printf '\033[0;37m')"        # white

# ----------\Find music function\----------
function findf() {
	local input_dir="$1"
	read -p "Please enter the name of music wich you search : " name
	read -p "Please Select your type d {directory} f {file} : " typelike

	if [[ $typelike == "d" ]]; then
		# Search directory
		if [[ "$input_dir" == "/" ]]; then
			sudo find  $input_dir -type d -iname $name
		else
			find  $input_dir -type d -iname $name
		fi
	elif [[ $typelike == "f" ]]; then
		echo -e "${orange}Install the mplayer if you want to play music after find it${normal}"
		# Search and play music whit Mplayer
		if [[ "$input_dir" == "/" ]]; then
			sudo find $input_dir -type f -iname "*$name*" -exec mplayer {} \;
		else
			find $input_dir -type f -iname "*$name*" -exec mplayer {} \;
		fi
		# Question to play another music
		read -p "${green}Do you want to play another? [Y/n] ${normal}" another

		if [[ "$another" == "" || "$another" == "Y" || "$another" == "y" ]]; then
			choose_dir
		elif [[ "$another" == "N" || "$another" == "n" ]]; then
			exit 1
		else
			echo -e "${red}Invalid argument!${normal}"
		fi
	else
		echo -e "${red}Your type is not true!${normal}"
		exit 1
	fi
}

# ----------\Select directory function\----------
function choose_dir() {
	clear

	echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"
	echo -e "${orange}Please Select your path ${normal}"

	read -p "Do you like to serach all of your system (Requires root access)? [Y/n] " all_system

	if [[ "$all_system" == "" || "$all_system" == "y" || "$all_system" == "Y" ]]; then
		# ----------\Search all of file system\----------
	    echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"
	    echo -e "This operation may take a while!"

		findf "/"
	elif [[ "$all_system" == "n" || "$all_system" == "N" ]]; then
		read -p "Do you like search this directory? [Y/n] " likedirectory

		if [[ "$likedirectory" == "" || "$likedirectory" == "y" || "$likedirectory" == "Y" ]]; then
			# ----------\Search current directory\----------
		    echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"

			findf "$PWD"
		elif [[ "$likedirectory" == "n" || "$likedirectory" == "N" ]]; then
			# ----------\Search entered path\----------
			read -p "Enter a directory : " -i "" -e addressdirectory
			echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"
				if [[ "$addressdirectory" == "/" ]]; then
					echo -e "${red}You have to chose first option :)${normal}"
				else
					findf "$addressdirectory"
				fi
		else
			echo -e "${red}Invalid argument!${normal}"
		fi
	else
	    echo -e "${red}Invalid argument!${normal}"
	fi
	echo -e "${green}done!${normal}"
}

# ----------\Uninstall function\----------
function uninstall() {
	clear

	read -p "Are you sure to uninstall music-finder??!! [y/N] " delete

	# ----------\Uninstall music-finder\---------
	if [[ "$delete" == "y" || "$delete" == "Y" ]]; then
		del_dependecies="0"
		#Checking if the distro is DebianBase / ArchBase / RedHatBase / SuseBase and running the correct command

		if pacman -Q &> /dev/null; then # Check Arch
			sudo pacman -Rs mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				del_dependecies="1"
			fi
		elif apt list --installed &> /dev/null; then # Check Debian
			sudo apt remove mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				del_dependecies="1"
			fi
		elif dnf list &> /dev/null; then # Check Fedora
			sudo dnf remove mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				del_dependecies="1"
			fi
		elif zypper search i+ &> /dev/null; then # Check openSUSE
			sudo zypper remove mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				del_dependecies="1"
			fi
		else
			echo -e "${red}Your distro is neither ArchBase or DebianBase or RedHatBase or SuseBase So, The script is not going to work in your distro and you have uninstall the dependencies manually. for more information read README.md${normal}"
			del_dependecies="1"
		fi

		sudo rm -f /usr/bin/music-finder
		# ----------\Removing Music-finder Command\----------
		if [[ "$del_dependecies" == "0" ]]; then
		    echo -e "\n ${red}music-finder succesfully uninstalled :( ${normal}"
		else
			echo -e "\n ${green}music-finder doesn't uninstall succesfully :) ${normal}"
			exit 1
		fi
	elif [[ "$delete" == "" || "$delete" == "n" || "$delete" == "N" ]]; then
		echo -e "\n ${green}music-finder is still installed :) ${normal}"
		exit 0
	else
		echo -e "${red}Invalid argument! ${normal}"
		exit 1
	fi
}

# ----------\Update fiunction\----------
function update() {
	clear

	if [[ -d /tmp/music_finder ]]; then
		cd /tmp
		git clone https://gitlab.com/Music_Finder/music-finder.git
		sleep 2
		cd music-finder
		sudo cp music-finder /usr/bin/music-finder
		sudo chmod 755 /usr/bin/music-finder
		sudo rm -rf /tmp/music-finder
		echo -e " ${green}Music_Finder updated succesfully! ${normal}"
	else
		sudo rm -rf /tmp/music_finder
		cd /tmp
		git clone https://gitlab.com/Music_Finder/music-finder.git
		sleep 2
		cd music-finder
		sudo cp music-finder /usr/bin/music-finder
		sudo chmod 755 /usr/bin/music-finder
		sudo rm -rf /tmp/music-finder
	fi
}

# ----------\Help function\----------
function usage() {
	echo -e "\n Usage: music-finder [ -h | --help ],  [ --uninstall ],   [ -U | --update ]"
	exit 1
}

# ----------\Input options\----------
case "$1" in
    "")    choose_dir    ;;
    "--update" | "-U")    update    ;;
	"--uninstall")    uninstall    ;;
	"--help" | "-h")    usage    ;;
	*)    usage    ;;
esac;
exit 0
