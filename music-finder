#!/bin/bash


######################################################
#                  Music_Finder V1.1                 #
#  https://github.com/hessamashari/music-finder.git  #
######################################################


normal="$(printf '\033[0m')"          # text mode
# Colors
red="$(printf '\033[0;31m')"  		  # red
green="$(printf '\033[0;32m')"        # green
orange="$(printf '\033[0;33m')"       # orange
blue="$(printf '\033[0;34m')"         # blue
white="$(printf '\033[0;37m')"        # white

# ----------\Play musics in list of directories function\----------
function play_in_dir() {
	directories="$1"
	# Play music in serched directory
	for dirName in $directories; do
		if cd "$dirName" &> /dev/null; then
			echo -e "\n"
			read -p "${green}Do you want to play musics in ${orange}'$dirName'${normal}? [Y/n] " playInDirectory
			if [[ "$playInDirectory" == "" || "$playInDirectory" == "Y" || "$playInDirectory" == "y" ]]; then
				mplayer $dirName/*
			elif [[ "$playInDirectory" == "N" || "$playInDirectory" == "n" ]]; then
				continue
			else
				echo -e "${red}Invalid argument!${normal}"
				exit 1
			fi
		# For directories witch has root owner
		elif sudo su -c "cd '$dirName'" &> /dev/null; then
			sudo mplayer $dirName/*
		else
			echo -e "${red}\nCannot cd to directory ${orange}'$dirName'${normal}"
			exit 1
		fi
	done
}

# ----------\Find music function\----------
function find_function() {
	local inputDir="$1"
	read -p "Please enter the name of music wich you search : " name
	read -p "Please Select your type d {directory} f {file} : " selectedType

	if [[ "$selectedType" == "D" || "$selectedType" == "d" ]]; then
		# Search directory
		if [[ "$inputDir" == "/" ]]; then
			sudo find "$inputDir" -type d -iname "$name"
			local searchDir=$(sudo find "$inputDir" -type d -iname "$name")

			play_in_dir "$searchDir"
		else
			find "$inputDir" -type d -iname "$name"
			local searchDir=$(find "$inputDir" -type d -iname "$name")

			play_in_dir "$searchDir"
		fi

	elif [[ "$selectedType" == "F" || "$selectedType" == "f" ]]; then
		echo -e "${orange}Install the mplayer if you want to play music after find it${normal}"
		# Search and play music whit Mplayer
		if [[ "$inputDir" == "/" ]]; then
			sudo find "$inputDir" -type f -iname "*$name*" -exec mplayer {} \;
		else
			find "$inputDir" -type f -iname "*$name*" -exec mplayer {} \;
		fi
		# Question to play another music
		read -p "${green}Do you want to play another? [Y/n] ${normal}" playAnotherMusic

		if [[ "$playAnotherMusic" == "" || "$playAnotherMusic" == "Y" || "$playAnotherMusic" == "y" ]]; then
			choose_dir
		elif [[ "$playAnotherMusic" == "N" || "$playAnotherMusic" == "n" ]]; then
			return
		else
			echo -e "${red}Invalid argument!${normal}"
			exit 1
		fi
	else
		echo -e "${red}Your type is not true!${normal}"
		exit 1
	fi
}

# ----------\Select directory function\----------
function choose_dir() {
	clear

	echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"
	echo -e "${orange}Please Select your path ${normal}"

	read -p "Do you like to serach all of your system (Requires root access)? [Y/n] " searchAllSystem

	if [[ "$searchAllSystem" == "" || "$searchAllSystem" == "y" || "$searchAllSystem" == "Y" ]]; then
		# Search all of file system
	    echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"
	    echo -e "This operation may take a while!"

		find_function "/"
	elif [[ "$searchAllSystem" == "n" || "$searchAllSystem" == "N" ]]; then
		read -p "Do you like search this directory? [Y/n] " likedirectory

		if [[ "$likedirectory" == "" || "$likedirectory" == "y" || "$likedirectory" == "Y" ]]; then
			# Search current directory
		    echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"

			find_function "$PWD"
		elif [[ "$likedirectory" == "n" || "$likedirectory" == "N" ]]; then
			# Search entered path
			read -p "Enter a directory : " -i "" -e userEnteredDirectory
			echo -e "${green}-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/${normal}"
				if [[ "$userEnteredDirectory" == "/" ]]; then
					echo -e "${red}You have to chose first option :)${normal}"
				else
					find_function "$userEnteredDirectory"
				fi
		else
			echo -e "${red}Invalid argument!${normal}"
			exit 1
		fi
	else
	    echo -e "${red}Invalid argument!${normal}"
		exit 1
	fi
	echo -e "${green}\ndone!${normal}"
}

# ----------\Uninstall function\----------
function uninstall() {
	clear

	read -p "Are you sure to uninstall music-finder??!! [y/N] " deletMusicFinder

	# Remove dependencies
	if [[ "$deletMusicFinder" == "y" || "$deletMusicFinder" == "Y" ]]; then
		deleteDependencies="0"
		# Checking if the distro is DebianBase / ArchBase / RedHatBase / SuseBase and running the correct command

		if pacman -Q &> /dev/null; then # Check Arch
			sudo pacman -Rs mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				deleteDependencies="1"
			fi
		elif apt list --installed &> /dev/null; then # Check Debian
			sudo apt remove mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				deleteDependencies="1"
			fi
		elif dnf list &> /dev/null; then # Check Fedora
			sudo dnf remove mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				deleteDependencies="1"
			fi
		elif zypper search i+ &> /dev/null; then # Check openSUSE
			sudo zypper remove mplayer
			# Check user's entered password
			if [[ "$?" == "1" ]]; then
				deleteDependencies="1"
			fi
		else
			echo -e "${red}Your distro is neither ArchBase or DebianBase or RedHatBase or SuseBase So, The script is not going to work in your distro and you have uninstall the dependencies manually. for more information read README.md${normal}"
			deleteDependencies="1"
		fi

		# Removing Music-finder Command
		sudo rm -f /usr/bin/music-finder

		if [[ "$deleteDependencies" == "0" ]]; then
		    echo -e "\n ${red}music-finder succesfully uninstalled :( ${normal}"
		else
			echo -e "\n ${green}music-finder doesn't uninstall succesfully :) ${normal}"
			exit 1
		fi
	elif [[ "$deletMusicFinder" == "" || "$deletMusicFinder" == "n" || "$deletMusicFinder" == "N" ]]; then
		echo -e "\n ${green}music-finder is still installed :) ${normal}"
		return
	else
		echo -e "${red}Invalid argument! ${normal}"
		exit 1
	fi
}

# ----------\Update function\----------
function update() {
	clear

	if [[ -d /tmp/music-finder ]]; then
		sudo rm -rf /tmp/music-finder
		cd /tmp
		git clone https://github.com/hessamashari/music-finder.git
		sleep 2
		cd music-finder
		sudo cp music-finder /usr/bin/music-finder
		sudo chmod 755 /usr/bin/music-finder
		sudo rm -rf /tmp/music-finder
		echo -e " ${green}Music_Finder updated succesfully! ${normal}"
	else
		cd /tmp
		git clone https://github.com/hessamashari/music-finder.git
		sleep 2
		cd music-finder
		sudo cp music-finder /usr/bin/music-finder
		sudo chmod 755 /usr/bin/music-finder
		sudo rm -rf /tmp/music-finder
		echo -e " ${green}Music_Finder updated succesfully! ${normal}"
	fi
}

# ----------\Help function\----------
function usage() {
	echo -e "\n Usage: music-finder [ -h | --help ],  [ --uninstall ],   [ -U | --update ]"
	return
}

# ----------\Input options\----------
case "$1" in
    "")    choose_dir    ;;
    "--update" | "-U")    update    ;;
	"--uninstall")    uninstall    ;;
	"--help" | "-h")    usage    ;;
	*)    usage    ;;
esac
exit 0
